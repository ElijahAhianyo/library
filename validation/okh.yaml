# Open know-how manifest 0.1
---
# The content of this manifest file is licensed under a Creative Commons Attribution 4.0 International License. 
# Licenses for modification and distribution of the hardware, documentation, source-code, etc are stated separately.

# Remove any fields that are not used. Comments (beginning with '#') may also be removed.

# Manifest metadata

# work in progress -- not *fully* compatible with yamale validator until all fields have
# been converted
# ps, we're keeping regex errors for emails + url whether they're required or not bc of web dev things ~ sea

date-created: day()
date-updated: day()
manifest-author:
  name: str()
  affiliation: str(required=False)
  email: regex('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$')

manifest-language: str(required=False) # [language-code]-[region] 

documentation-language: str(required=False) # [language-code]-[region] 

manifest-is-translation: include('manifest-is-translation', required=False)

documentation-is-translation: include('manifest-is-translation', required=False)

# # Properties

title: str(required=True)                    # required | text | A title to identify the thing

description: str(required=True)              # required | paragraph. Longer string??

intended-use: str(required=False)            # recommended | Paragraph

# keywords:                                  # At least one keyword is recommended | text array 
#   - [keyword 1]
#   - [keyword 2]

project-link: regex('http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\(\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+')

health-safety-notice: str(required=False)    # paragraph

contact: include('contact-kit', required=False) # currently listed as required,

# contributors:                              # recommended
#   - name: [contributor 1]                  # text
#     affiliation: [value]                   # text
#     email: [value]                         # email address

# image: [value]                             # recommended | absolute or relative path

version: str(required=False)                 # text

development-stage: str(required=False)       # text

made: bool(required=False)                         # boolean - true or false

made-independently: bool(required=False)           # boolean - true or false

standards-used: list(include('standards-used'), required=False)

# derivative-of:  
#   title: [value]                           # text | Title of the original
#   manifest: [value]                        # URL - Absolute path | OKH manifest location
#   web: [value]                             # URL - Absolute path | web presence location

# variant-of:  
#   title: [value]                           # text | Title of the original
#   manifest: [value]                        # URL - Absolute path | OKH manifest location
#   web: [value]                             # URL - Absolute path | web presence location

# sub:  
#   title: [sub 1]                           # text | Title of the original
#   manifest: [value]                        # URL - Absolute path | OKH manifest location
#   web: [value]                             # URL - Absolute path | web presence location

# # License 

# license:                                   # At least one license is required | The format should be an SPDX identifier. See https://spdx.org/licenses/hardware: [value] # recommended | The license under which the hardware is released
#   hardware: [value]                        # recommended | The license under which the documentation is released
#   documentation: [value]                   # recommended | The license under which the documentation is released
#   software: [value]                        # recommended where software is used | The license under which the software is released

licensor: include('nonessential-contact', required=False)

# # Documentation

# documentation-home: [value]               # At least one of the project-link or documentation-home fields is required | absolute path

# archive-download: [value]                 # Absolute or relative path

design-files: list(include('list-item'), required=False)
schematics: list(include('list-item'), required=False)

# bom: [value]                              # recommended | absolute or relative path | Direct the maker to the Bill of Materials
# tool-list: [value]                        # recommended | absolute or relative path | Direct the maker to a list of tools required to make the thing

making-instructions: list(include('list-item'), required=False) 
manufacturing-files: list(include('list-item'), required=False)
risk-assessment: list(include('list-item'), required=False)
tool-settings: list(include('list-item'), required=False) 
quality-instructions: list(include('list-item'), required=False)
operating-instructions: list(include('list-item'), required=False)
maintenance-instructions: list(include('list-item'), required=False)
disposal-instructions: list(include('list-item'), required=False)
software: list(include('list-item'), required=False)

# # User defined Fields 
# # Include any custom / extended fields here
---
manifest-is-translation: 
  title: str(required=False) # text | Title of the original
  manifest: include('url-type') # URL - Absolute path | OKH manifest location
  web: include('url-type') # URL - Absolute path | web presence location
  lang: str(required=False) # language of original [language]-[region]

documentation-is-translation:  
  title: str(required=False) # text | Title of the original
  manifest: include('url-type') # URL - Absolute path | OKH manifest location
  web: include('url-type') # URL - Absolute path | web presence location
  lang: str(required=False) # language of original [language]-[region]

standards-used:
  standard-title: str() # Required where used | Title of the standard used in developing the design or documentation
  publisher: str(required=False) # Publisher of the standard
  reference: str(required=False) # Reference indentifier of the standard (e.g. ISO 9001)
  certification: list(include('certification', required=False))

list-item:
  path: include('url-type', required=False)
  title: str(required=False)

nonessential-contact:
  name: str(required=False)                 
  affiliation: str(required=False)
  email: regex('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$', required=False)

contact-kit:
  name: str(required=False)                 
  affiliation: str(required=False)
  email: regex('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$', required=False)
  social: list(include('social-list-item'), required=False)
---
url-type: regex('http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\(\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+')
---
social-list-item:
  platform: str()
  user-handle: str()

certification:                         # If certification has been granted confirming compliance with the standard
  certifier: str() # Individual or organisation granting the certification. Use "Self" for self-certification
  date-awarded: day() # Date certification was granted
  link: str() # Link to evidence of certification (e.g. certificate). Use an an absolute path to an external resource or an absolute or relative path to evidence within the documentation.  